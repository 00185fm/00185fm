version: "3.8"

services:
  ################ TRAEFIK
  traefik:
    image: traefik:v2.10.4
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command:
      # We are going to use the docker provider
      - "--providers.docker"
      # Only enabled containers should be exposed
      - "--providers.docker.exposedByDefault=false"
      # Disabling the dashbaord
      - "--api.dashboard=false"
      - "--api.insecure=false"
      # The entrypoints we want to expose
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Enable ACME (Let's Encrypt): automatic SSL.
      - "--certificatesresolvers.letsencrypt.acme.email=CF_API_EMAIL"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=00185fm.eu"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.00185fm.eu"
      # Global redirect to https
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
    networks:
      - traefik-net
    environment:
      - CF_API_EMAIL
      - CF_DNS_API_TOKEN
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json

  ################ POCKETBASE
  pocketbase:
    build:
      context: ./pocketbase
      args:
        - PB_PORT
        - PB_VERSION=0.18.5
    command:
      [
        "./pocketbase",
        "serve",
        "--http=0.0.0.0:${PB_PORT}",
        "--origins=00185fm.eu,*.00185fm.eu",
      ]
    container_name: pocketbase
    restart: always
    depends_on:
      - traefik
    networks:
      - traefik-net
    ports:
      - ${PB_PORT}:${PB_PORT}
    environment:
      - NOW_PLAYING_ID
      - LIQ_TOKEN
      - PRIVATE_POCKETBASE_TOKEN
      - PB_FILES_URL
    volumes:
      - ./pocketbase/pb_data:/pb/pb_data
      - ./pocketbase/pb_hooks:/pb/pb_hooks
      - ./pocketbase/pb_public:/pb/pb_public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pocketbase.rule=Host(`pb.00185fm.eu`)"
      - "traefik.http.routers.pocketbase.entrypoints=websecure"
      - "traefik.http.routers.pocketbase.tls.certresolver=letsencrypt"
      - "traefik.http.services.pocketbase.loadbalancer.server.port=4090"
      - "traefik.docker.network=traefik-net"
    healthcheck: #optional (recommended) since v0.10.0
      test: wget --no-verbose --tries=1 --spider http://localhost:4090/api/health || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  ################ ICECAST
  icecast:
    image: moul/icecast
    container_name: icecast
    restart: always
    depends_on:
      - traefik
    volumes:
      - logs:/var/log/icecast2
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ICECAST_HOSTNAME
      - ICECAST_SOURCE_PASSWORD
      - ICECAST_ADMIN_PASSWORD
      - ICECAST_PASSWORD
      - ICECAST_RELAY_PASSWORD
    networks:
      - traefik-net
    ports:
      - ${ICECAST_PORT:-4040}:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.icecast.rule=Host(`ice.00185fm.eu`)"
      - "traefik.http.routers.icecast.entrypoints=websecure"
      - "traefik.http.routers.icecast.tls.certresolver=letsencrypt"
      - "traefik.http.services.icecast.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik-net"

  ################ LIQUIDSOAP
  liquidsoap:
    image: "savonet/liquidsoap-alpine:v2.1.4"
    container_name: liquidsoap
    restart: always
    command: ["/settings.liq"]
    environment:
      - ICECAST_HOSTNAME
      - ICECAST_SOURCE_PASSWORD
      - STREAM_NAME
      - STREAM_DESC
      - STREAM_URL
      - STREAM_MOUNTPOINT
      - LIVE_PASSWORD
      - LIVE_MOUNTPOINT
      - LIQ_TOKEN
      - LIVE_PORT
      - LOCAL_PORT
      - PB_LOCAL_NP
      - PB_DEF_PLAYLIST
    depends_on:
      - pocketbase
      - icecast
      - traefik
    networks:
      - traefik-net
    ports:
      - "${LIVE_PORT:-4080}:4080"
      - "${LOCAL_PORT:-4085}:4085"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.liquidsoap.rule=Host(`liq.00185fm.eu`)"
      - "traefik.http.routers.liquidsoap.entrypoints=websecure"
      - "traefik.http.routers.liquidsoap.tls.certresolver=letsencrypt"
      - "traefik.http.services.liquidsoap.loadbalancer.server.port=${LIVE_PORT}"
      - "traefik.docker.network=traefik-net"
    volumes:
      - ./pocketbase/pb_public/:/pb_public:ro
      - ./liquidsoap/settings.liq:/settings.liq:ro

  ################ FRONTEND
  app:
    build:
      context: ./app
      args:
        - PUBLIC_NP_ID
        - PUBLIC_DEF_PLAYLIST_ID
        - PRIVATE_POCKETBASE_URL
        - PUBLIC_POCKETBASE_URL
        - PUBLIC_DEFAUL_ART
        - PUBLIC_RADIO_URL
        - PRIVATE_LIQUIDSOAP
        - LIVE_PORT
        - LIVE_PASSWORD
        - LIVE_MOUNTPOINT
        - PUBLIC_LIQ_URL
        - PRIVATE_POCKETBASE_TOKEN
    container_name: app
    restart: always
    environment:
      - ORIGIN
      - BODY_SIZE_LIMIT=0
      - PUBLIC_NP_ID
      - PUBLIC_DEF_PLAYLIST_ID
      - PRIVATE_POCKETBASE_URL
      - PUBLIC_POCKETBASE_URL
      - PUBLIC_DEFAUL_ART
      - PUBLIC_RADIO_URL
      - PRIVATE_LIQUIDSOAP
      - LIVE_PORT
      - LIVE_PASSWORD
      - LIVE_MOUNTPOINT
      - PUBLIC_LIQ_URL
      - PRIVATE_POCKETBASE_TOKEN
    networks:
      - traefik-net
    ports:
      - "4000:4000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`dev.00185fm.eu`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"
      - "traefik.http.services.app.loadbalancer.server.port=4000"
      - "traefik.docker.network=traefik-net"
    depends_on:
      - pocketbase
      - liquidsoap
      - icecast
      - traefik

volumes:
  logs:

networks:
  traefik-net:
